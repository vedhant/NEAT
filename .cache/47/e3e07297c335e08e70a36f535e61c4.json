{"id":"node_gene.js","dependencies":[{"name":"/home/vedhant/ml/neat/package.json","includedInParent":true,"mtime":1571574106382}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar TYPE = {\n  INPUT: 0,\n  HIDDEN: 1,\n  OUTPUT: 2\n};\n\nvar NodeGene =\n/*#__PURE__*/\nfunction () {\n  function NodeGene(type, id) {\n    _classCallCheck(this, NodeGene);\n\n    this.type = type;\n    this.id = id;\n  }\n\n  _createClass(NodeGene, [{\n    key: \"copy\",\n    value: function copy() {\n      return new NodeGene(this.type, this.id);\n    }\n  }]);\n\n  return NodeGene;\n}();\n\nexports.default = NodeGene;\n;\nObject.defineProperty(NodeGene, 'TYPE', {\n  value: TYPE,\n  writable: false\n});"},"sourceMaps":null,"error":null,"hash":"f178152e372f73e16fc73b13448e0aad","cacheData":{"env":{}}}