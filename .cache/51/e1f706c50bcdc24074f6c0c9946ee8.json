{"id":"connection_gene.js","dependencies":[{"name":"/home/vedhant/ml/neat/package.json","includedInParent":true,"mtime":1571574106382}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar ConnectionGene =\n/*#__PURE__*/\nfunction () {\n  function ConnectionGene(inNode, outNode, weight, enabled, innovation) {\n    _classCallCheck(this, ConnectionGene);\n\n    this.inNode = inNode;\n    this.outNode = outNode;\n    this.weight = weight;\n    this.enabled = enabled;\n    this.innovation = innovation;\n  }\n\n  _createClass(ConnectionGene, [{\n    key: \"copy\",\n    value: function copy() {\n      return new ConnectionGene(this.inNode, this.outNode, this.weight, this.enabled, this.innovation);\n    }\n  }]);\n\n  return ConnectionGene;\n}();\n\nexports.default = ConnectionGene;\n;"},"sourceMaps":null,"error":null,"hash":"45246947d5da1b5aa2ef555966bfe2b5","cacheData":{"env":{}}}